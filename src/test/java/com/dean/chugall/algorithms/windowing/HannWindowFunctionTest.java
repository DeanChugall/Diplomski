/*
 * (C) Copyright 2014 Dean Chugall
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.dean.chugall.algorithms.windowing;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.sameInstance;
import static org.hamcrest.MatcherAssert.assertThat;

import java.util.Arrays;

import org.junit.Before;
import org.junit.Test;

public class HannWindowFunctionTest {
    
    private static final int WINDOW_SIZE = 512;
    
    private HannWindowFunction hannWindow;
    private double[] f1;

    @Before
    public void setUp() throws Exception {
        hannWindow = new HannWindowFunction(WINDOW_SIZE);
        f1 = hannWindow.getPrecomputedFactors(WINDOW_SIZE);
    }

    @Test
    public void precomputedFactorsAreComputedOnceAndForAll() {
        double[] f2 = hannWindow.getPrecomputedFactors(WINDOW_SIZE);
        
        assertThat(f2, sameInstance(f1));
    }
    
    @Test 
    public void avoidUnwantedRegressionDueToAlgorithmRefactoring() {
        
        assertThat(f1, is(equalTo(sample)));
        
        // In case you need to reprint it after an improvement:
        /*
        for(int i = 0; i < WINDOW_SIZE; i++) {
            System.out.print(f1[i] + ", ");
            if((i + 1) % 5 == 0) {
                System.out.println();
            }
        }
        */
    }

    @Test
    public void applyingFunctionOnArrayOfOnesShouldYieldIdenticalNumbers() {
        double[] buffer = new double[WINDOW_SIZE];
        Arrays.fill(buffer, 1.0d);
        
        hannWindow.applyFunction(buffer);
        
        assertThat(buffer, is(equalTo(f1)));
    }
    
    @Test(expected = IllegalArgumentException.class)
    public void callingApllyFunctionWithBufferOfDifferentSizeCausesIllegalArgumentException() {
        hannWindow.applyFunction(new double[WINDOW_SIZE + 1]);
    }

    // merely for unwanted regression due to refactoring
    private static final double[] sample = new double[] {
        0.0, 3.7796577274096244E-5, 1.511805947714273E-4, 3.4013491038087373E-4, 6.046309567968589E-4, 
        9.446287458383384E-4, 0.0013600768744944647, 0.0018509125326960918, 0.00241706151281168, 0.003058438220866544, 
        0.003774945689483389, 0.00456647559254264, 0.005432908261559732, 0.0063741127037773015, 0.0073899466219696786, 
        0.008480256435956068, 0.009644877305819977, 0.010883633156830497, 0.012196336706062738, 0.013582789490712122, 
        0.015042781898099433, 0.016576093197361252, 0.018182491572821535, 0.01986173415903897, 0.021613567077524876, 
        0.023437725475126125, 0.025333933564067435, 0.027301904663646515, 0.029341341243576458, 0.03145193496896809, 
        0.033633366746946, 0.03588530677489121, 0.038207414590302524, 0.040599339122270095, 0.043060718744552196, 
        0.04559118133024853, 0.04819034430806041, 0.05085781472013051, 0.05359318928145257, 0.056396054440842724, 
        0.05926598644346259, 0.062202551394885286, 0.0652053053266945, 0.06827379426360608, 0.07140755429210316, 
        0.07460611163057346, 0.07786898270093845, 0.0811956742017641, 0.08458568318284077, 0.08803849712122286, 
        0.09155359399871504, 0.09513044238079427, 0.09876850149695549, 0.1024672213224686, 0.10622604266153479, 
        0.11004439723182935, 0.11392170775041788, 0.1178573880210339, 0.12185084302270349, 0.12590146899970445, 
        0.1300086535528457, 0.13417177573205397, 0.13839020613025255, 0.14266330697851953, 0.14699043224250907, 
        0.15137092772012367, 0.15580413114041997, 0.1602893722637354, 0.16482597298301915, 0.16941324742635255, 
        0.1740505020606437, 0.17873703579648026, 0.18347214009412405, 0.1882550990706332, 0.19308518960809357, 
        0.19796168146294407, 0.20288383737637988, 0.20785091318581578, 0.21286215793739288, 0.21791681399951346, 
        0.22301411717738356, 0.22815329682854946, 0.23333357597940785, 0.23855417144267393, 0.24381429393578824, 
        0.24911314820024566, 0.25444993312182745, 0.25982384185171903, 0.26523406192849397, 0.27067977540094756, 
        0.2761601589517594, 0.2816743840219681, 0.28722161693623766, 0.2928010190288982, 0.29841174677074034, 
        0.30405295189654535, 0.3097237815333314, 0.31542337832929634, 0.32115088058343716, 0.32690542237582787, 
        0.332686133698534, 0.33849214058714694, 0.3443225652529146, 0.35017652621545126, 0.3560531384360055, 
        0.3619515134512656, 0.3678707595076833, 0.37380998169629476, 0.3797682820880183, 0.38574475986940937, 
        0.39173851147885075, 0.3977486307431589, 0.403774209014585, 0.4098143353081901, 0.41586809643957334, 
        0.42193457716293326, 0.42801286030943986, 0.4341020269258987, 0.44020115641368357, 0.44630932666791845, 
        0.4524256142168873, 0.4585490943616504, 0.4646788413158455, 0.470813928345655, 0.476953427909915, 
        0.4830964118003467, 0.48924195128188885, 0.4953891172331097, 0.5015369802866777, 0.507684610969869, 
        0.513831079845091, 0.5199754576504004, 0.5261168154399951, 0.5322542247246581, 0.5383867576121322, 
        0.5445134869474046, 0.5506334864528807, 0.5567458308684231, 0.56284959609124, 0.5689438593155955, 
        0.5750276991723263, 0.5811001958681392, 0.5871604313246719, 0.5932074893172933, 0.5992404556136247, 
        0.6052584181117587, 0.6112604669781572, 0.617245694785205, 0.6232131966484006, 0.629162070363163, 
        0.6350914165412318, 0.6410003387466432, 0.6468879436312581, 0.6527533410698249, 0.658595644294553, 
        0.6644139700291813, 0.6702074386225172, 0.6759751741814269, 0.6817163047032597, 0.6874299622076816, 
        0.6931152828679031, 0.6987714071412778, 0.7043974798992529, 0.7099926505566534, 0.715556073200279, 
        0.7210869067167939, 0.7265843149198932, 0.73204746667672, 0.7374755360335252, 0.7428677023405365, 
        0.7482231503760324, 0.7535410704695904, 0.7588206586245, 0.7640611166393141, 0.7692616522285276, 
        0.7744214791423595, 0.7795398172856232, 0.7846158928356659, 0.7896489383593606, 0.7946381929291308, 
        0.7995829022379936, 0.8044823187135983, 0.8093357016312517, 0.8141423172259037, 0.8189014388030833, 
        0.8236123468487646, 0.828274329138148, 0.8328866808433378, 0.8374487046399035, 0.8419597108123054, 
        0.8464190173581698, 0.8508259500913988, 0.8551798427440984, 0.8594800370673081, 0.8637258829305197, 
        0.8679167384199683, 0.8720519699356801, 0.8761309522872656, 0.8801530687884378, 0.8841177113502481, 
        0.8880242805730206, 0.8918721858369737, 0.8956608453915124, 0.8993896864431825, 0.9030581452422679, 
        0.906665667168023, 0.9102117068125226, 0.913695728063121, 0.9171172041835048, 0.9204756178933274, 
        0.9237704614464155, 0.9270012367075335, 0.9301674552276942, 0.9332686383180054, 0.9363043171220421, 
        0.9392740326867304, 0.9421773360317347, 0.9450137882173384, 0.9477829604108043, 0.9504844339512095, 
        0.9531178004127403, 0.9556826616664407, 0.9581786299404045, 0.9606053278784008, 0.962962388596925, 
        0.9652494557406666, 0.9674661835363858, 0.9696122368451885, 0.9716872912131963, 0.9736910329205977, 
        0.9756231590290799, 0.9774833774276276, 0.9792714068766871, 0.9809869770506855, 0.9826298285789001, 
        0.984199713084672, 0.985696393222957, 0.9871196427162092, 0.9884692463885909, 0.9897450001985038, 
        0.9909467112694383, 0.992074197919133, 0.9931272896870426, 0.9941058273601096, 0.9950096629968351, 
        0.9958386599496449, 0.9965926928855497, 0.9972716478050929, 0.997875422059586, 0.9984039243666283, 
        0.9988570748239062, 0.9992348049212749, 0.999537057551115, 0.9997637870169671, 0.9999149590404399, 
        0.9999905507663935, 0.9999905507663935, 0.9999149590404399, 0.9997637870169671, 0.999537057551115, 
        0.9992348049212749, 0.9988570748239062, 0.9984039243666283, 0.997875422059586, 0.9972716478050929, 
        0.9965926928855497, 0.9958386599496449, 0.995009662996835, 0.9941058273601097, 0.9931272896870426, 
        0.992074197919133, 0.9909467112694383, 0.9897450001985038, 0.9884692463885909, 0.9871196427162092, 
        0.9856963932229571, 0.984199713084672, 0.9826298285789001, 0.9809869770506855, 0.9792714068766872, 
        0.9774833774276277, 0.97562315902908, 0.9736910329205979, 0.9716872912131963, 0.9696122368451886, 
        0.9674661835363858, 0.9652494557406666, 0.962962388596925, 0.9606053278784008, 0.9581786299404046, 
        0.9556826616664407, 0.9531178004127403, 0.9504844339512095, 0.9477829604108045, 0.9450137882173383, 
        0.9421773360317347, 0.9392740326867304, 0.9363043171220422, 0.9332686383180053, 0.9301674552276942, 
        0.9270012367075338, 0.9237704614464156, 0.9204756178933275, 0.917117204183505, 0.9136957280631213, 
        0.9102117068125226, 0.9066656671680231, 0.9030581452422679, 0.8993896864431825, 0.8956608453915125, 
        0.8918721858369738, 0.8880242805730207, 0.8841177113502481, 0.8801530687884378, 0.8761309522872658, 
        0.8720519699356802, 0.8679167384199684, 0.8637258829305199, 0.8594800370673082, 0.8551798427440985, 
        0.850825950091399, 0.8464190173581697, 0.8419597108123054, 0.8374487046399035, 0.832886680843338, 
        0.828274329138148, 0.823612346848765, 0.8189014388030833, 0.8141423172259039, 0.8093357016312517, 
        0.8044823187135988, 0.7995829022379937, 0.7946381929291308, 0.7896489383593606, 0.7846158928356659, 
        0.7795398172856234, 0.7744214791423596, 0.7692616522285278, 0.7640611166393143, 0.7588206586245003, 
        0.7535410704695905, 0.7482231503760325, 0.7428677023405368, 0.7374755360335251, 0.7320474666767202, 
        0.7265843149198928, 0.7210869067167944, 0.715556073200279, 0.7099926505566537, 0.7043974798992529, 
        0.6987714071412783, 0.6931152828679032, 0.6874299622076818, 0.6817163047032595, 0.675975174181427, 
        0.6702074386225174, 0.6644139700291813, 0.6585956442945534, 0.652753341069825, 0.6468879436312585, 
        0.6410003387466432, 0.6350914165412322, 0.6291620703631631, 0.6232131966484004, 0.6172456947852049, 
        0.6112604669781573, 0.605258418111759, 0.5992404556136246, 0.5932074893172933, 0.5871604313246721, 
        0.5811001958681395, 0.5750276991723263, 0.5689438593155957, 0.5628495960912402, 0.556745830868423, 
        0.5506334864528807, 0.5445134869474044, 0.5383867576121325, 0.5322542247246581, 0.5261168154399953, 
        0.5199754576504003, 0.5138310798450915, 0.5076846109698692, 0.5015369802866779, 0.49538911723311, 
        0.4892419512818889, 0.48309641180034696, 0.47695342790991496, 0.47081392834565544, 0.4646788413158455, 
        0.45854909436165053, 0.4524256142168872, 0.4463093266679189, 0.4402011564136837, 0.43410202692589894, 
        0.4280128603094398, 0.4219345771629333, 0.41586809643957356, 0.40981433530819, 0.40377420901458505, 
        0.397748630743159, 0.391738511478851, 0.38574475986940937, 0.37976828208801844, 0.373809981696295, 
        0.3678707595076836, 0.3619515134512656, 0.3560531384360052, 0.3501765262154516, 0.3443225652529146, 
        0.33849214058714705, 0.3326861336985342, 0.32690542237582815, 0.32115088058343727, 0.31542337832929657, 
        0.30972378153333174, 0.3040529518965453, 0.2984117467707404, 0.292801019028898, 0.287221616936238, 
        0.2816743840219681, 0.2761601589517595, 0.2706797754009474, 0.2652340619284943, 0.25982384185171914, 
        0.2544499331218277, 0.24911314820024555, 0.24381429393578824, 0.23855417144267405, 0.23333357597940774, 
        0.22815329682854946, 0.22301411717738368, 0.21791681399951368, 0.21286215793739288, 0.20785091318581583, 
        0.2028838373763801, 0.19796168146294435, 0.19308518960809357, 0.1882550990706333, 0.18347214009412421, 
        0.17873703579648015, 0.17405050206064376, 0.16941324742635266, 0.16482597298301932, 0.1602893722637354, 
        0.15580413114042008, 0.15137092772012384, 0.14699043224250935, 0.1426633069785196, 0.13839020613025244, 
        0.1341717757320542, 0.1300086535528457, 0.1259014689997045, 0.12185084302270338, 0.11785738802103413, 
        0.11392170775041793, 0.11004439723182946, 0.10622604266153474, 0.10246722132246883, 0.09876850149695554, 
        0.09513044238079416, 0.09155359399871504, 0.08803849712122291, 0.08458568318284088, 0.08119567420176405, 
        0.07786898270093873, 0.07460611163057351, 0.07140755429210327, 0.06827379426360608, 0.06520530532669477, 
        0.0622025513948854, 0.05926598644346254, 0.056396054440842724, 0.05359318928145268, 0.05085781472013062, 
        0.04819034430806041, 0.04559118133024859, 0.043060718744552307, 0.040599339122270206, 0.038207414590302524, 
        0.03588530677489127, 0.033633366746946114, 0.03145193496896803, 0.029341341243576513, 0.02730190466364646, 
        0.025333933564067546, 0.023437725475126125, 0.02161356707752493, 0.019861734159038913, 0.018182491572821646, 
        0.016576093197361252, 0.015042781898099378, 0.013582789490712233, 0.012196336706062794, 0.010883633156830552, 
        0.009644877305819921, 0.00848025643595618, 0.0073899466219696786, 0.006374112703777357, 0.005432908261559732, 
        0.004566475592542751, 0.0037749456894834443, 0.003058438220866544, 0.00241706151281168, 0.0018509125326961473, 
        0.0013600768744944647, 9.446287458383384E-4, 6.046309567968589E-4, 3.4013491038087373E-4, 1.511805947714273E-4, 
        3.7796577274096244E-5, 0.0
    };
}
