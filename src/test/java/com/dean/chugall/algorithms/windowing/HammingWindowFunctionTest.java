/*
 * (C) Copyright 2014 Dean Chugall
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package com.dean.chugall.algorithms.windowing;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.sameInstance;
import static org.hamcrest.MatcherAssert.assertThat;

import java.util.Arrays;

import org.junit.Before;
import org.junit.Test;

public class HammingWindowFunctionTest {
    
    private static final int WINDOW_SIZE = 512;
    
    private HammingWindowFunction hammingWindow;
    private double[] f1;

    @Before
    public void setUp() throws Exception {
        hammingWindow = new HammingWindowFunction(WINDOW_SIZE);
        f1 = hammingWindow.getPrecomputedFactors(WINDOW_SIZE);
    }

    @Test
    public void precomputedFactorsAreComputedOnceAndForAll() {
        double[] f2 = hammingWindow.getPrecomputedFactors(WINDOW_SIZE);
        
        assertThat(f2, sameInstance(f1));
    }
    
    @Test 
    public void avoidUnwantedRegressionDueToAlgorithmRefactoring() {
        
        assertThat(f1, is(equalTo(sample)));
        
        // In case you need to reprint it after an improvement:
        /*
        for(int i = 0; i < WINDOW_SIZE; i++) {
            System.out.print(f1[i] + ", ");
            if((i + 1) % 5 == 0) {
                System.out.println();
            }
        }
        */
    }

    @Test
    public void applyingFunctionOnArrayOfOnesShouldYieldIdenticalNumbers() {
        double[] buffer = new double[WINDOW_SIZE];
        Arrays.fill(buffer, 1.0d);
        
        hammingWindow.applyFunction(buffer);
        
        assertThat(buffer, is(equalTo(f1)));
    }
    
    @Test(expected = IllegalArgumentException.class)
    public void callingApllyFunctionWithBufferOfDifferentSizeCausesIllegalArgumentException() {
        hammingWindow.applyFunction(new double[WINDOW_SIZE + 1]);
    }

    // merely for unwanted regression due to refactoring
    private static final double[] sample = new double[] {
        0.08000000000000002, 0.08003477285109217, 0.08013908614718973, 0.08031292411755042, 0.0805562604802531, 
        0.08086905844617126, 0.08125127072453492, 0.0817028395300804, 0.08222369659178674, 0.08281376316319722, 
        0.08347295003432476, 0.08420115754513924, 0.08499827560063494, 0.08586418368747512, 0.08679875089221212, 
        0.0878018359210796, 0.0888732871213544, 0.0900129425042841, 0.09122062976957773, 0.09249616633145519, 
        0.09383935934625148, 0.09525000574157239, 0.09672789224699585, 0.09827279542631584, 0.09988448171132291, 
        0.10156270743711604, 0.10330721887894206, 0.10511775229055481, 0.10699403394409035, 0.10893578017145067, 
        0.11094269740719032, 0.11301448223289995, 0.11515082142307836, 0.11735139199248851, 0.11961586124498802, 
        0.12194388682382867, 0.12433511676341558, 0.1267891895425201, 0.12930573413893637, 0.1318843700855753, 
        0.13452470752798562, 0.13722634728329447, 0.13998888090055894, 0.1428118907225176, 0.14569494994873494, 
        0.1486376227001276, 0.1516394640848634, 0.15470002026562302, 0.15781882852821355, 0.16099541735152506, 
        0.16422930647881784, 0.16752000699033076, 0.17086702137719906, 0.17426984361667114, 0.177727959248612, 
        0.181240845453283, 0.18480797113038444, 0.18842879697935122, 0.19210277558088723, 0.19582935147972813, 
        0.19960796126861807, 0.20343803367348967, 0.20731898963983236, 0.211250242420238, 0.2152311976631084, 
        0.2192612535025138, 0.2233398006491864, 0.2274662224826366, 0.23163989514437766, 0.23586018763224437, 
        0.24012646189579223, 0.24443807293276187, 0.24879436888659412, 0.25319469114498255, 0.2576383744394461, 
        0.2621247469459086, 0.26665313038626953, 0.27122284013095055, 0.2758331853024015, 0.2804834688795524, 
        0.2851729878031929, 0.2899010330822655, 0.2946668899010553, 0.29946983772726005, 0.3043091504209252, 
        0.30918409634422606, 0.3140939384720813, 0.31903793450358153, 0.3240153369742145, 0.3290253933688718, 
        0.3340673462356187, 0.33914043330021065, 0.34424388758133867, 0.3493769375065864, 0.35453880702908114, 
        0.3597287157448218, 0.3649458790106649, 0.3701895080629527, 0.3754588101367622, 0.3807529885857617, 
        0.3860712430026513, 0.3914127693401752, 0.3967767600326815, 0.4021624041182152, 0.4075688873611251, 
        0.41299539237516436, 0.41844109874706864, 0.42390518316059117, 0.4293868195209769, 0.43488517907985663, 
        0.44039943056054276, 0.4459287402837062, 0.45147227229341824, 0.4570291884835349, 0.46259864872440754, 
        0.46817981098989864, 0.4737718314846847, 0.47937386477182686, 0.48498506390058893, 0.490604580534485, 
        0.49623156507953636, 0.5018651668127184, 0.5075045340105779, 0.5131488140780026, 0.5187971536771219, 
        0.524448698856319, 0.5301025951793378, 0.5357579878544609, 0.5414140218637435, 0.5470698420922796, 
        0.5527245934574838, 0.5583774210383685, 0.5640274702047956, 0.5696738867466855, 0.5753158170031616, 
        0.5809524079916124, 0.5865828075366503, 0.5922061643989494, 0.5978216284039408, 0.6034283505703479, 
        0.6090254832385402, 0.6146121801986881, 0.6201875968186983, 0.6257508901719099, 0.6313012191645347, 
        0.6368377446628181, 0.6423596296199047, 0.6478660392023886, 0.6533561409165285, 0.6588291047341099, 
        0.6642841032179332, 0.6697203116469117, 0.6751369081407576, 0.6805330737842389, 0.6859079927509888, 
        0.6912608524268469, 0.6965908435327158, 0.7018971602469128, 0.7071790003269989, 0.7124355652310671, 
        0.717666060238471, 0.7228696945699757, 0.7280456815073127, 0.7331932385121211, 0.7383115873442567, 
        0.7433999541794504, 0.7484575697263017, 0.7534836693425825, 0.7584774931508432, 0.7634382861532936, 
        0.7683652983459498, 0.7732577848320232, 0.7781150059345401, 0.7829362273081689, 0.7877207200502455, 
        0.7924677608109707, 0.7971766319027733, 0.8018466214088127, 0.8064770232906118, 0.8110671374948004, 
        0.8156162700589541, 0.8201237332165104, 0.8245888455007516, 0.8290109318478314, 0.8333893236988367, 
        0.8377233591008635, 0.8420123828070962, 0.8462557463758709, 0.8504528082687113, 0.8546029339473209, 
        0.8587054959695162, 0.8627598740840869, 0.8667654553245706, 0.8707216341019236, 0.8746278122960782, 
        0.8784833993463709, 0.8822878123408258, 0.8860404761042844, 0.8897408232853627, 0.8933882944422282, 
        0.8969823381271791, 0.9005224109700158, 0.9040079777601915, 0.9074385115277279, 0.9108134936228864, 
        0.9141324137945812, 0.9173947702675208, 0.9206000698180714, 0.9237478278488245, 0.9268375684618613, 
        0.9298688245307023, 0.9328411377709309, 0.9357540588094786, 0.938607147252565, 0.9413999717522787, 
        0.9441321100717919, 0.9468031491491959, 0.9494126851599514, 0.9519603235779399, 0.9544456792351128, 
        0.9568683763797211, 0.9592280487331255, 0.9615243395451722, 0.9637569016481287, 0.965925397509171, 
        0.9680294992814134, 0.970068888853475, 0.9720432578975735, 0.9739523079161406, 0.97579575028695, 
        0.9775733063067535, 0.9792847072334174, 0.9809296943265522, 0.9825080188866306, 0.9840194422925881, 
        0.9854637360378983, 0.9868406817651205, 0.9881500712989125, 0.9893917066775036, 0.9905654001826235, 
        0.9916709743678833, 0.9927082620856024, 0.9936771065120792, 0.9945773611713009, 0.9954088899570883, 
        0.9961715671536735, 0.9968652774547058, 0.9974899159806856, 0.9980453882948193, 0.9985316104172981, 
        0.9989485088379937, 0.9992960205275729, 0.9995740929470258, 0.9997826840556098, 0.9999217623172048, 
        0.9999913067050821, 0.9999913067050821, 0.9999217623172048, 0.9997826840556098, 0.9995740929470258, 
        0.9992960205275729, 0.9989485088379937, 0.9985316104172981, 0.9980453882948193, 0.9974899159806856, 
        0.9968652774547058, 0.9961715671536735, 0.9954088899570883, 0.9945773611713009, 0.9936771065120792, 
        0.9927082620856024, 0.9916709743678833, 0.9905654001826235, 0.9893917066775036, 0.9881500712989126, 
        0.9868406817651205, 0.9854637360378983, 0.9840194422925882, 0.9825080188866306, 0.9809296943265522, 
        0.9792847072334174, 0.9775733063067537, 0.9757957502869501, 0.9739523079161406, 0.9720432578975735, 
        0.970068888853475, 0.9680294992814134, 0.9659253975091711, 0.9637569016481287, 0.9615243395451722, 
        0.9592280487331255, 0.9568683763797212, 0.9544456792351128, 0.9519603235779401, 0.9494126851599513, 
        0.9468031491491959, 0.9441321100717919, 0.9413999717522789, 0.938607147252565, 0.9357540588094787, 
        0.9328411377709311, 0.9298688245307024, 0.9268375684618613, 0.9237478278488245, 0.9206000698180716, 
        0.9173947702675209, 0.9141324137945812, 0.9108134936228865, 0.9074385115277279, 0.9040079777601915, 
        0.900522410970016, 0.8969823381271791, 0.8933882944422283, 0.8897408232853627, 0.8860404761042846, 
        0.8822878123408259, 0.878483399346371, 0.8746278122960782, 0.8707216341019237, 0.8667654553245707, 
        0.8627598740840872, 0.8587054959695162, 0.854602933947321, 0.8504528082687113, 0.8462557463758709, 
        0.8420123828070962, 0.8377233591008639, 0.8333893236988368, 0.8290109318478316, 0.8245888455007516, 
        0.8201237332165109, 0.8156162700589542, 0.8110671374948004, 0.8064770232906118, 0.8018466214088127, 
        0.7971766319027735, 0.7924677608109708, 0.7877207200502456, 0.7829362273081693, 0.7781150059345403, 
        0.7732577848320233, 0.7683652983459499, 0.7634382861532939, 0.7584774931508431, 0.7534836693425826, 
        0.7484575697263014, 0.7433999541794509, 0.7383115873442568, 0.7331932385121215, 0.7280456815073126, 
        0.7228696945699761, 0.717666060238471, 0.7124355652310672, 0.7071790003269989, 0.701897160246913, 
        0.696590843532716, 0.6912608524268469, 0.6859079927509891, 0.680533073784239, 0.6751369081407579, 
        0.6697203116469118, 0.6642841032179337, 0.65882910473411, 0.6533561409165284, 0.6478660392023885, 
        0.6423596296199048, 0.6368377446628183, 0.6313012191645346, 0.6257508901719099, 0.6201875968186983, 
        0.6146121801986885, 0.6090254832385402, 0.603428350570348, 0.597821628403941, 0.5922061643989492, 
        0.5865828075366503, 0.5809524079916122, 0.5753158170031619, 0.5696738867466855, 0.5640274702047957, 
        0.5583774210383683, 0.5527245934574841, 0.5470698420922797, 0.5414140218637438, 0.5357579878544613, 
        0.5301025951793378, 0.5244486988563192, 0.5187971536771218, 0.5131488140780031, 0.5075045340105779, 
        0.5018651668127185, 0.4962315650795363, 0.4906045805344854, 0.48498506390058904, 0.4793738647718271, 
        0.47377183148468466, 0.4681798109898987, 0.46259864872440776, 0.45702918848353485, 0.45147227229341824, 
        0.4459287402837063, 0.440399430560543, 0.43488517907985663, 0.429386819520977, 0.4239051831605914, 
        0.4184410987470689, 0.41299539237516436, 0.40756888736112484, 0.40216240411821547, 0.3967767600326815, 
        0.3914127693401753, 0.3860712430026515, 0.3807529885857619, 0.3754588101367623, 0.37018950806295287, 
        0.3649458790106652, 0.3597287157448217, 0.3545388070290812, 0.34937693750658616, 0.34424388758133895, 
        0.3391404333002107, 0.3340673462356188, 0.3290253933688716, 0.3240153369742148, 0.31903793450358164, 
        0.31409393847208145, 0.30918409634422594, 0.3043091504209252, 0.29946983772726016, 0.29466688990105516, 
        0.2899010330822655, 0.285172987803193, 0.2804834688795526, 0.2758331853024015, 0.2712228401309506, 
        0.2666531303862697, 0.2621247469459088, 0.2576383744394461, 0.25319469114498266, 0.24879436888659429, 
        0.24443807293276176, 0.2401264618957923, 0.23586018763224448, 0.23163989514437777, 0.2274662224826366, 
        0.22333980064918652, 0.21926125350251396, 0.2152311976631086, 0.21125024242023804, 0.20731898963983225, 
        0.2034380336734899, 0.19960796126861807, 0.1958293514797282, 0.19210277558088712, 0.18842879697935144, 
        0.1848079711303845, 0.18124084545328312, 0.17772795924861196, 0.17426984361667136, 0.1708670213771991, 
        0.16752000699033065, 0.16422930647881784, 0.16099541735152512, 0.1578188285282136, 0.15470002026562296, 
        0.15163946408486367, 0.14863762270012765, 0.14569494994873505, 0.1428118907225176, 0.13998888090055922, 
        0.13722634728329458, 0.13452470752798557, 0.1318843700855753, 0.12930573413893648, 0.12678918954252016, 
        0.12433511676341558, 0.12194388682382873, 0.11961586124498813, 0.11735139199248862, 0.11515082142307836, 
        0.1130144822329, 0.11094269740719043, 0.10893578017145061, 0.1069940339440904, 0.10511775229055476, 
        0.10330721887894218, 0.10156270743711604, 0.09988448171132297, 0.09827279542631584, 0.0967278922469959, 
        0.09525000574157239, 0.09383935934625143, 0.09249616633145524, 0.09122062976957779, 0.0900129425042841, 
        0.08887328712135434, 0.08780183592107971, 0.08679875089221212, 0.08586418368747517, 0.08499827560063494, 
        0.08420115754513935, 0.08347295003432481, 0.08281376316319722, 0.08222369659178674, 0.08170283953008045, 
        0.08125127072453492, 0.08086905844617126, 0.0805562604802531, 0.08031292411755042, 0.08013908614718973, 
        0.08003477285109217, 0.08000000000000002
    };

}
